AWSTemplateFormatVersion: "2010-09-09"
Description: "ðŸš€ Bitcoin Tracker â€“ ECS Fargate + DynamoDB + ALB + API Gateway (simplified)"

Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
  Subnet1:
    Type: AWS::EC2::Subnet::Id
  Subnet2:
    Type: AWS::EC2::Subnet::Id
  ECRImage:
    Type: String
    Description: "ECR image URL (example: 992382582640.dkr.ecr.us-east-1.amazonaws.com/bitcoin-crud:latest)"

Resources:

  DynamoTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: BitcoinPositions
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  AppSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow HTTP traffic
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0

  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Type: application
      Scheme: internet-facing
      Subnets:
        - !Ref Subnet1
        - !Ref Subnet2
      SecurityGroups:
        - !Ref AppSecurityGroup

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Port: 80
      Protocol: HTTP
      VpcId: !Ref VpcId
      TargetType: ip
      HealthCheckEnabled: true
      HealthCheckProtocol: HTTP
      HealthCheckPath: /
      HealthCheckIntervalSeconds: 60
      HealthCheckTimeoutSeconds: 15
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 10
      Matcher:
        HttpCode: "200-499"

  LoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref LoadBalancer
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup

  Cluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: BitcoinCluster

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /ecs/bitcoin-tracker
      RetentionInDays: 7

  TaskDef:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: BitcoinTask
      Cpu: "256"
      Memory: "512"
      NetworkMode: awsvpc
      RequiresCompatibilities: [FARGATE]
      ExecutionRoleArn: arn:aws:iam::992382582640:role/LabRole
      TaskRoleArn: arn:aws:iam::992382582640:role/LabRole
      ContainerDefinitions:
        - Name: bitcoin
          Image: !Ref ECRImage
          PortMappings:
            - ContainerPort: 80
          Environment:
            - Name: TABLE_NAME
              Value: BitcoinPositions
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref LogGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: bitcoin

  Service:
    Type: AWS::ECS::Service
    DependsOn: LoadBalancerListener
    Properties:
      Cluster: !Ref Cluster
      DesiredCount: 1
      LaunchType: FARGATE
      TaskDefinition: !Ref TaskDef
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets:
            - !Ref Subnet1
            - !Ref Subnet2
          SecurityGroups:
            - !Ref AppSecurityGroup
      LoadBalancers:
        - ContainerName: bitcoin
          ContainerPort: 80
          TargetGroupArn: !Ref TargetGroup

Outputs:
  LoadBalancerDNS:
    Description: "Access your app directly via ALB"
    Value: !GetAtt LoadBalancer.DNSName
  DynamoDBTable:
    Description: "DynamoDB Table"
    Value: !Ref DynamoTable
  ECSServiceName:
    Description: "ECS Service Name"
    Value: !GetAtt Service.Name
